/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Home;
import Model.PatientDirectory;
import Model.PersonDirectory;
import java.util.List;
import Model.System;
import Model.*;
import java.util.ArrayList;

/**
 *
 * @author prerana
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    System sys;
    public MainFrame() {
        initComponents();
        sys = new System();
        instantiatevalues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        splitPane = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        lblPersonM = new javax.swing.JButton();
        lblPatientM = new javax.swing.JButton();
        lblEncounterM = new javax.swing.JButton();
        lblDisplay = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        splitPane.setBackground(new java.awt.Color(204, 255, 204));
        splitPane.setDividerLocation(250);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        lblPersonM.setBackground(new java.awt.Color(204, 204, 204));
        lblPersonM.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblPersonM.setText("PERSON MANAGEMENT");
        lblPersonM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblPersonMActionPerformed(evt);
            }
        });

        lblPatientM.setBackground(new java.awt.Color(204, 204, 204));
        lblPatientM.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblPatientM.setText("PATIENT MANAGEMENT ");
        lblPatientM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblPatientMActionPerformed(evt);
            }
        });

        lblEncounterM.setBackground(new java.awt.Color(204, 204, 204));
        lblEncounterM.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblEncounterM.setText("ENCOUNTER MANAGEMENT");
        lblEncounterM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblEncounterMActionPerformed(evt);
            }
        });

        lblDisplay.setBackground(new java.awt.Color(204, 204, 204));
        lblDisplay.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblDisplay.setText("DISPLAY");
        lblDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblDisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEncounterM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPatientM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPersonM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lblPersonM, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(lblPatientM, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(lblEncounterM, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(lblDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(256, Short.MAX_VALUE))
        );

        splitPane.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 884, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 739, Short.MAX_VALUE)
        );

        splitPane.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1140, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblPersonMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblPersonMActionPerformed
        // TODO add your handling code here:
        
        PersonPanel personPanel = new PersonPanel(sys);
        splitPane.setRightComponent(personPanel);
        
    }//GEN-LAST:event_lblPersonMActionPerformed

    private void lblPatientMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblPatientMActionPerformed
        // TODO add your handling code here:
        
        PatientPanel patientPanel = new PatientPanel(sys);
        splitPane.setRightComponent(patientPanel);
        
    }//GEN-LAST:event_lblPatientMActionPerformed

    private void lblEncounterMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblEncounterMActionPerformed
        // TODO add your handling code here:
        EncounterPanel encounterPanel = new EncounterPanel(sys);
        splitPane.setRightComponent(encounterPanel);
    }//GEN-LAST:event_lblEncounterMActionPerformed

    private void lblDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblDisplayActionPerformed
        // TODO add your handling code here:
        Display displayPanel = new Display(sys);
        splitPane.setRightComponent(displayPanel);
    }//GEN-LAST:event_lblDisplayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    
    void instantiatevalues() {
//        sys.setPersondir(new PersonDirectory());
//        sys.setPatientdir(new PatientDirectory());
//        
//
//        List<Person> persons = sys.getPersondir().getListofpersons();
//        List<Patient> patients = sys.getPatientdir().getListofpatients();
        
        List<Patient> patients = new ArrayList<>();
        List<Person> persons = new ArrayList<>();

        City boston = new City("Boston");
        

        Community Downtown = new Community("Downtown");
        Community Boylston = new Community("Boylston");
        Community Roxbury = new Community("Roxbury");

        Downtown.setCity(boston);
        Roxbury.setCity(boston);      
        Boylston.setCity(boston);
        
       

        boston.getCommunities().add(Downtown);
        boston.getCommunities().add(Boylston);
        boston.getCommunities().add(Roxbury);
        
        sys.getCity().add(boston);

        persons.add(new Person("R101","Prer",23,"prer@gmail.com",new Home("JVUE", Downtown)));
        persons.add(new Person("R102","John",34,"john@gmail.com",new Home("Longwood", Boylston)));
        persons.add(new Person("R103","Joe",40,"joe@gmail.com",new Home("JVUE", Boylston)));
        persons.add(new Person("R104","Jacob",17,"jacob@gmail.com",new Home("Longwood", Downtown)));
        persons.add(new Person("R105","Bobby",60,"bobby@gmail.com",new Home("JVUE", Roxbury)));
        persons.add(new Person("R106","Brown",02,"brown@gmail.com",new Home("Mission Main", Boylston)));
        persons.add(new Person("R107","Danny",50,"danny@gmail.com",new Home("Huntington", Downtown)));
        persons.add(new Person("R108","Davis",26,"davis@gmail.com",new Home("Longwood", Boylston)));
        persons.add(new Person("R109","Daisy",23,"daisy@gmail.com",new Home("Davis", Roxbury)));
        persons.add(new Person("R110","Paige",39,"paige@gmail.com",new Home("JVUE", Boylston)));
        persons.add(new Person("R111","Vaibhav",98,"vaibhav@gmail.com",new Home("Huntington", Roxbury)));
        persons.add(new Person("R112","Varun",12,"varun@gmail.com",new Home("Davis", Downtown)));
        persons.add(new Person("R113","Rexi",78,"rexi@gmail.com",new Home("Longwood", Boylston)));
        persons.add(new Person("R114","Madison",10,"madison@gmail.com",new Home("JVUE", Downtown)));
        persons.add(new Person("R115","Peter",55,"peter@gmail.com",new Home("JVUE", Roxbury)));
        persons.add(new Person("R116","Faraz",88,"faraz@gmail.com",new Home("JVUE", Downtown)));
        persons.add(new Person("R117","Loki",13,"loki@gmail.com",new Home("Pheonix", Boylston)));
        persons.add(new Person("R118","Thor",23,"thor@gmail.com",new Home("Huntington", Roxbury)));
        persons.add(new Person("R119","Williams",63,"williams@gmail.com",new Home("Davis", Downtown)));
        persons.add(new Person("R120","Aditya",29,"aditya@gmail.com",new Home("Pheonix", Boylston)));
        persons.add(new Person("R121","Sana",15,"sana@gmail.com",new Home("Huntington", Roxbury)));
        persons.add(new Person("R122","Emily",27,"emily@gmail.com",new Home("Pheonix", Boylston)));
        persons.add(new Person("R123","Hannah",43,"hannah@gmail.com",new Home("JVUE", Downtown)));
        persons.add(new Person("R124","Bryce",03,"bryce@gmail.com",new Home("Davis", Boylston)));
        persons.add(new Person("R125","Justin",73,"justin@gmail.com",new Home("Huntington", Downtown)));
        persons.add(new Person("R126","Clay",22,"clay@gmail.com",new Home("Pheonix", Roxbury)));
        persons.add(new Person("R127","Erica",49,"erica@gmail.com",new Home("Davis", Boylston)));
        persons.add(new Person("R128","Sandy",93,"sandy@gmail.com",new Home("Pheonix", Downtown)));
        
        Patient p;
        VitalSigns v = null;

        p = new Patient("R101","Prer", 1, "Richard", "A","No");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R103","Joe", 3, "Gupta", "AB","Yes");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2019", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2020", v));
        v = new VitalSigns(100.0, 55, 19, 80, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R105","Bobby", 5, "Paul", "B","No");
        v = new VitalSigns(97.1, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("12-01-2019", v));
        v = new VitalSigns(99.0, 90, 12, 100, 90);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("10-07-2019", v));
        v = new VitalSigns(101.0, 85, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-12-2019", v));        
        patients.add(p);
        
        p = new Patient("R110","Paige", 10, "Richard", "A","Yes");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2012", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2012", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2012", v));        
        patients.add(p);
        
        p = new Patient("R113","Rexi", 13, "Paul", "AB","Yes");
        v = new VitalSigns(99.3, 99, 12, 90, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("08-09-2018", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2019", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R116","Faraz", 16, "Gupta", "AB","No");
        v = new VitalSigns(97.8, 101, 18, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2020", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2020", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2020", v));        
        patients.add(p);
        
        p = new Patient("R118","Thor", 18, "Paul", "B","Yes");
        v = new VitalSigns(98.6, 87, 15, 110, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 110, 50);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 80, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R119","Williams", 19, "Gupta", "AB","No");
        v = new VitalSigns(98.6, 87, 15, 90, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 100, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 90, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R120","Aditya", 20, "Richard", "AB","Yes");
        v = new VitalSigns(98.6, 87, 15, 110, 8700);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 130, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 140, 70);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R121","Sana", 21, "Gupta", "B","No");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R122","Emily", 22, "Richard", "A","No");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R123","Hannah", 23, "Gupta", "AB","Yes");
        v = new VitalSigns(98.6, 87, 15, 130, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 150, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 160, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R124","Bryce", 24, "Richard", "B","Yes");
        v = new VitalSigns(98.6, 87, 15, 100, 50);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 50);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 40);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R125","Justin", 25, "Gupta", "A","No");
        v = new VitalSigns(98.6, 87, 15, 100, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R126","Clay", 26, "Richard", "AB","Yes");
        v = new VitalSigns(98.6, 87, 15, 170, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 200, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 220, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R127","Erica", 27, "Paul", "A","No");
        v = new VitalSigns(98.6, 87, 15, 90, 80);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 110, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 60);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        p = new Patient("R128","Sandy", 28, "Gupta", "B","Yes");
        v = new VitalSigns(98.6, 87, 15, 100, 70);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("28-09-2021", v));
        v = new VitalSigns(99.1, 90, 12, 90, 50);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("21-07-2021", v));
        v = new VitalSigns(99.0, 75, 13, 120, 50);
        p.getEncounterhistory().getEncounters().add(new Model.Encounter("18-05-2021", v));        
        patients.add(p);
        
        sys.setPatientdir(new PatientDirectory());
        sys.setPersondir(new PersonDirectory());
        sys.getPatientdir().setListofpatients(patients);
        sys.getPersondir().setListofpersons(persons);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton lblDisplay;
    private javax.swing.JButton lblEncounterM;
    private javax.swing.JButton lblPatientM;
    private javax.swing.JButton lblPersonM;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
