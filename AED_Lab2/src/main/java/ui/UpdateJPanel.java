/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.CarFleet;
import model.CarFleetHistory;

/**
 *
 * @author prerana
 */
public class UpdateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateJPanel
     */
    
    CarFleetHistory history;
    private String availability;
    public UpdateJPanel(CarFleetHistory history) {
        initComponents();
        
        this.history = history;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbllisence_no = new javax.swing.JLabel();
        lblserial_no = new javax.swing.JLabel();
        lblcar_type = new javax.swing.JLabel();
        lblmodel_no = new javax.swing.JLabel();
        lblbrand = new javax.swing.JLabel();
        lblavailability = new javax.swing.JLabel();
        lbllocation = new javax.swing.JLabel();
        lblseats = new javax.swing.JLabel();
        lblyear_manufactured = new javax.swing.JLabel();
        lblmaintenance_due = new javax.swing.JLabel();
        txtlisence_no = new javax.swing.JTextField();
        txtserial_no = new javax.swing.JTextField();
        txtcar_type = new javax.swing.JTextField();
        txtmodel_no = new javax.swing.JTextField();
        txtbrand = new javax.swing.JTextField();
        txtlocation = new javax.swing.JTextField();
        txtseats = new javax.swing.JTextField();
        txtyear_manufactured = new javax.swing.JTextField();
        txtmaintenance_due = new javax.swing.JTextField();
        txtavailability = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        ScrollTable = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarFleet = new javax.swing.JTable();
        btnUpdate1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lblTitle.setBackground(new java.awt.Color(255, 0, 0));
        lblTitle.setFont(new java.awt.Font("Sylfaen", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("UPDATE INFORMATION");

        btnDelete.setBackground(new java.awt.Color(255, 204, 204));
        btnDelete.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 600));

        lbllisence_no.setBackground(new java.awt.Color(255, 255, 255));
        lbllisence_no.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbllisence_no.setText("Lisence Number :");

        lblserial_no.setBackground(new java.awt.Color(255, 255, 255));
        lblserial_no.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblserial_no.setText("Serial Number :");

        lblcar_type.setBackground(new java.awt.Color(255, 255, 255));
        lblcar_type.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblcar_type.setText("Type of Car :");

        lblmodel_no.setBackground(new java.awt.Color(255, 255, 255));
        lblmodel_no.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblmodel_no.setText("Model Number :");

        lblbrand.setBackground(new java.awt.Color(255, 255, 255));
        lblbrand.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblbrand.setText("Brand :");

        lblavailability.setBackground(new java.awt.Color(255, 255, 255));
        lblavailability.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblavailability.setText("Availability :");

        lbllocation.setBackground(new java.awt.Color(255, 255, 255));
        lbllocation.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbllocation.setText("Location :");

        lblseats.setBackground(new java.awt.Color(255, 255, 255));
        lblseats.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblseats.setText("Seats :");

        lblyear_manufactured.setBackground(new java.awt.Color(255, 255, 255));
        lblyear_manufactured.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblyear_manufactured.setText("Manufacture Year :");

        lblmaintenance_due.setBackground(new java.awt.Color(255, 255, 255));
        lblmaintenance_due.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblmaintenance_due.setText("Maintenance Due :");

        txtlisence_no.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtlisence_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlisence_noFocusLost(evt);
            }
        });

        txtserial_no.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtserial_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtserial_noFocusLost(evt);
            }
        });

        txtcar_type.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        txtmodel_no.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtmodel_no.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmodel_noFocusLost(evt);
            }
        });

        txtbrand.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        txtlocation.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        txtseats.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtseats.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtseatsFocusLost(evt);
            }
        });

        txtyear_manufactured.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtyear_manufactured.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtyear_manufacturedFocusLost(evt);
            }
        });

        txtmaintenance_due.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        txtavailability.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(255, 204, 204));
        btnSearch.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblcar_type, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbllisence_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblbrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbllocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblyear_manufactured, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtlocation, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblseats, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtlisence_no, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcar_type, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbrand, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtyear_manufactured, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblserial_no)
                            .addComponent(lblmodel_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblavailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblmaintenance_due, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtserial_no, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmodel_no, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtseats, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmaintenance_due, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtavailability, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbllisence_no)
                        .addComponent(txtlisence_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblserial_no)
                    .addComponent(txtserial_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcar_type)
                    .addComponent(lblmodel_no)
                    .addComponent(txtmodel_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcar_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblavailability)
                            .addComponent(txtavailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtbrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblbrand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtlocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbllocation)
                            .addComponent(txtseats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblseats))
                        .addGap(28, 28, 28)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblyear_manufactured)
                    .addComponent(lblmaintenance_due)
                    .addComponent(txtyear_manufactured, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmaintenance_due, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        tblCarFleet.setBackground(new java.awt.Color(204, 255, 255));
        tblCarFleet.setFont(new java.awt.Font("Sylfaen", 0, 12)); // NOI18N
        tblCarFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Lisence Number", "Serial Number", "Car Type", "Model Number", "Brand", "Availabilityl", "Location", "Seats", "Year Manufactured", "Maintenance Due"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCarFleet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCarFleetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCarFleet);

        ScrollTable.setViewportView(jScrollPane1);

        btnUpdate1.setBackground(new java.awt.Color(255, 204, 204));
        btnUpdate1.setFont(new java.awt.Font("Sylfaen", 1, 14)); // NOI18N
        btnUpdate1.setText("UPDATE");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate1)
                        .addGap(166, 166, 166))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(70, 70, 70))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(ScrollTable)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ScrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(237, 237, 237)
                        .addComponent(btnUpdate1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(220, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        CarFleet selectedCars = (CarFleet)model.getValueAt(selectedRowIndex, 0);
        
        history.deleteCars(selectedCars);
        
        JOptionPane.showMessageDialog(this, "Selected Car row deleted.");
        
        populateTable();
        
//        for(CarFleet c : history.getHistory()){
//        history.getHistory().remove(c);
//        
//         try {
//            FileWriter csvWriter = new FileWriter("table.csv");
//            for(CarFleet c : history.getHistory()){
//                csvWriter.append(c.toCSV() + "\n");
////            }
//            
//            csvWriter.flush();
//            csvWriter.close();
//        } catch (IOException ex) {
//            Logger.getLogger(CreateJPanel.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        }
//    
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to be viewed or updated.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        CarFleet selectedCars = (CarFleet)model.getValueAt(selectedRowIndex, 0);
        
               
        int i = tblCarFleet.getSelectedRow();
        //DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        if(i >= 0){
            model.setValueAt(txtlisence_no.getText(), i, 0);
            model.setValueAt(txtserial_no.getText(), i, 1);
            model.setValueAt(txtcar_type.getText(), i, 2);
            model.setValueAt(txtmodel_no.getText(), i, 3);
            model.setValueAt(txtbrand.getText(), i, 4);
            model.setValueAt(txtavailability.getText(), i, 5);
            model.setValueAt(txtlocation.getText(), i, 6);
            model.setValueAt(txtseats.getText(), i, 7);
            model.setValueAt(txtyear_manufactured.getText(), i, 8);
            model.setValueAt(txtmaintenance_due.getText(), i, 9);
        } else {
            JOptionPane.showMessageDialog(null, "Error");
        }
        
        txtlisence_no.setText((selectedCars.getLisence_no()));
        txtserial_no.setText((selectedCars.getSerial_no()));
        txtcar_type.setText(selectedCars.getCar_type());
        txtmodel_no.setText(String.valueOf(selectedCars.getModel_no()));
        txtbrand.setText((selectedCars.getBrand()));
        //txtlisence_no.setText((selectedCars.getLisence_no()));
        txtavailability.setText((selectedCars.getAvailability()));
        txtlocation.setText((selectedCars.getLocation()));
        txtseats.setText(String.valueOf(selectedCars.getSeats()));
        txtyear_manufactured.setText((selectedCars.getYear_manufactured()));
        txtmaintenance_due.setText((selectedCars.getMaintenance_due()));
        
        
        for(CarFleet c : history.getHistory()){
            if(c.getSerial_no().equals(txtserial_no.getText().toString())){
                //make all the modifications here
                c.setLisence_no(txtlisence_no.getText().toString());
                c.setSerial_no(txtserial_no.getText().toString());
                c.setCar_type(txtcar_type.getText().toString());
                c.setModel_no(Integer.parseInt(txtmodel_no.getText().toString()));
                c.setBrand(txtbrand.getText().toString());
                c.setAvailability(txtavailability.getText().toString());
                c.setLocation(txtlocation.getText().toString());
                c.setSeats(Integer.parseInt(txtseats.getText().toString()));
                c.setYear_manufactured(txtyear_manufactured.getText().toString());
                c.setMaintenance_due(txtmaintenance_due.getText().toString());
                
                
            }
        }
        
        
        //history.getHistory().remove(c);
        
         try {
            FileWriter csvWriter = new FileWriter("table.csv");
            for(CarFleet c : history.getHistory()){
                csvWriter.append(c.toCSV() + "\n");
            }
            
            csvWriter.flush();
            csvWriter.close();
        } catch (IOException ex) {
            Logger.getLogger(CreateJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void tblCarFleetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCarFleetMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblCarFleet.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        txtlisence_no.setText(model.getValueAt(selectedRowIndex, 0).toString());
        txtserial_no.setText(model.getValueAt(selectedRowIndex, 1).toString());
        txtcar_type.setText(model.getValueAt(selectedRowIndex, 2).toString());
        txtmodel_no.setText(model.getValueAt(selectedRowIndex, 3).toString());
        txtbrand.setText(model.getValueAt(selectedRowIndex, 4).toString());
        txtavailability.setText(model.getValueAt(selectedRowIndex, 5).toString());
        txtlocation.setText(model.getValueAt(selectedRowIndex, 6).toString());
        txtseats.setText(model.getValueAt(selectedRowIndex, 7).toString());
        txtyear_manufactured.setText(model.getValueAt(selectedRowIndex, 8).toString());
        txtmaintenance_due.setText(model.getValueAt(selectedRowIndex, 9).toString());
    }//GEN-LAST:event_tblCarFleetMouseClicked

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel> (model);
        tblCarFleet.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel> (model);
        tblCarFleet.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtSearch.getText().trim()));
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtlisence_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlisence_noFocusLost
        // TODO add your handling code here:
        if(txtlisence_no.getText().trim().length() != 0) {
           if(!(txtlisence_no.getText().matches("[A-Z]{4}[0-9]{3}"))) {
           JOptionPane.showMessageDialog(null, "Invalid Lisence Number");
           txtlisence_no.setText("");
       }
        }
    }//GEN-LAST:event_txtlisence_noFocusLost

    private void txtserial_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtserial_noFocusLost
        // TODO add your handling code here:
        if(txtserial_no.getText().trim().length() != 0) {
           if(!(txtserial_no.getText().matches("[0-9]{3}[A-Z]{3}[0-9]{3}"))) {
           JOptionPane.showMessageDialog(null, "Invalid Serial Number");
           txtserial_no.setText("");
       } 
       }
    }//GEN-LAST:event_txtserial_noFocusLost

    private void txtmodel_noFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmodel_noFocusLost
        // TODO add your handling code here:
        if(!(txtmodel_no.getText().matches("[0-9]{5}"))){
            JOptionPane.showMessageDialog(null, "Invalid input.Enter a 5 digit Model Number");
            txtmodel_no.setText("");
        }
    }//GEN-LAST:event_txtmodel_noFocusLost

    private void txtseatsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtseatsFocusLost
        // TODO add your handling code here:
        if(!(txtseats.getText().matches("[2-9]"))){
            JOptionPane.showMessageDialog(null, "Invalid input.Enter number of seats");
            txtseats.setText("");
        }
    }//GEN-LAST:event_txtseatsFocusLost

    private void txtyear_manufacturedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtyear_manufacturedFocusLost
        // TODO add your handling code here:
        if(txtserial_no.getText().trim().length() != 0) {
           if(!(txtyear_manufactured.getText().matches("[0-9]{4}"))) {
           JOptionPane.showMessageDialog(null, "Invalid input.");
           txtyear_manufactured.setText("");
       } 
       }
    }//GEN-LAST:event_txtyear_manufacturedFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblavailability;
    private javax.swing.JLabel lblbrand;
    private javax.swing.JLabel lblcar_type;
    private javax.swing.JLabel lbllisence_no;
    private javax.swing.JLabel lbllocation;
    private javax.swing.JLabel lblmaintenance_due;
    private javax.swing.JLabel lblmodel_no;
    private javax.swing.JLabel lblseats;
    private javax.swing.JLabel lblserial_no;
    private javax.swing.JLabel lblyear_manufactured;
    private javax.swing.JTable tblCarFleet;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtavailability;
    private javax.swing.JTextField txtbrand;
    private javax.swing.JTextField txtcar_type;
    private javax.swing.JTextField txtlisence_no;
    private javax.swing.JTextField txtlocation;
    private javax.swing.JTextField txtmaintenance_due;
    private javax.swing.JTextField txtmodel_no;
    private javax.swing.JTextField txtseats;
    private javax.swing.JTextField txtserial_no;
    private javax.swing.JTextField txtyear_manufactured;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblCarFleet.getModel();
        model.setRowCount(0);
        
        for(CarFleet cf : history.getHistory()) {
            
            Object[] row = new Object[10];
            row[0] = cf;
            row[1] = cf.getSerial_no();
            row[2] = cf.getCar_type();
            row[3] = cf.getModel_no();
            row[4] = cf.getBrand();
            row[5] = cf.getAvailability();
            row[6] = cf.getLocation();
            row[7] = cf.getSeats();
            row[8] = cf.getYear_manufactured();
            row[9] = cf.getMaintenance_due();
            
            model.addRow(row);
        }
        
    }
}
